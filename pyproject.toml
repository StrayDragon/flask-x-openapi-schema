[project]
name = "flask-x-openapi-schema"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "straydragon", email = "straydragonl@foxmail.com" }
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

license = {text = "MIT"}

requires-python = ">=3.8"

dependencies = [
    "flask>=2.0.0",
    "flask-restful>=0.3.9",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
]

[project.urls]
Homepage = "https://github.com/langgenius/dify"
Documentation = "https://docs.dify.ai"
Repository = "https://github.com/langgenius/dify.git"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src/flask_x_openapi_schema --cov-report=term-missing --cov-report=html -v"
xfail_strict = true
filterwarnings = [
    # "ignore::pytest.PytestCollectionWarning",
]

[tool.coverage.run]
source = ["src/flask_x_openapi_schema"]
omit = [
    "*/__init__.py",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]